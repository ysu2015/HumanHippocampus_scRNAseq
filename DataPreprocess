library('Seurat')
packageVersion("Seurat")
library('Matrix')
library("dplyr")
library("tidyr")
library(stringr)
library("reshape2")
library(ggplot2)


setwd("./")
#### data integration to remove batch effect ###
ifnb<-readRDS("single.All_info_gene200To8K_MT5_scDblFinder.batch16.rds")
# split the dataset into a list of seurat objects
ifnb.list <- SplitObject(ifnb, split.by = "Batch")

# normalize and identify variable features for each dataset independently
ifnb.list <- lapply(X = ifnb.list, FUN = function(x) {
  x <- NormalizeData(x)
  x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 2000)
})

# select features that are repeatedly variable across datasets for integration run PCA on each
# dataset using these features
features <- SelectIntegrationFeatures(object.list = ifnb.list)

ifnb.list <- lapply(X = ifnb.list, FUN = function(x) {
  x <- ScaleData(x, features = features, 
                 vars.to.regress = c("nCount_RNA", "percent.mt"),
                 verbose = FALSE)
  x <- RunPCA(x, features = features, verbose = FALSE)
})

# perform integration
immune.anchors <- FindIntegrationAnchors(object.list = ifnb.list, anchor.features = features, reduction = "rpca")

immune.combined <- IntegrateData(anchorset = immune.anchors,features.to.integrate)

# specify that we will perform downstream analysis on the corrected data note that the
# original unmodified data still resides in the 'RNA' assay
DefaultAssay(immune.combined) <- "integrated"

# Run the standard workflow for visualization and clustering
immune.combined <- ScaleData(immune.combined, 
                             vars.to.regress = c("nCount_RNA", "percent.mt"),
                             verbose = FALSE)
immune.combined <- RunPCA(immune.combined, npcs = 100, verbose = FALSE)

immune.combined <- JackStraw(immune.combined,
                             dims=100,
                             num.replicate = 100)
immune.combined <- ScoreJackStraw(immune.combined, dims = 1:100)

#################
# determine pcs to use for downstream
JackStrawPlot(immune.combined, dims = 1:50)
JackStrawPlot(immune.combined, dims = 50:100)
ElbowPlot(immune.combined, ndims = 100, reduction = "pca")

DefaultAssay(immune.combined) <- "integrated"
immune.combined
#An object of class Seurat 
#30723 features across 224464 samples within 2 assays 
#Active assay: integrated (2000 features, 2000 variable features)
#1 other assay present: RNA
#1 dimensional reduction calculated: pca

print(immune.combined[["pca"]], dim=1:5, nfeatures = 10)
DimHeatmap(immune.combined, dims = 31:45, cells = 500, balanced = TRUE)

immune.combined <- RunUMAP(immune.combined, reduction = "pca", dims = 1:100)
immune.combined <- FindNeighbors(immune.combined, reduction = "pca", dims = 1:100)
immune.combined <- FindClusters(immune.combined, resolution = c(0.1))

#DimPlot(immune.combined, group.by = c("integrated_snn_res.0.1"), split.by=c("integrated_snn_res.0.1"),ncol=5,label=T, combine = T)

tiff("pc100-res01-800.tiff",width = 800,height = 800)
DimPlot(immune.combined, group.by = c("integrated_snn_res.0.1"),ncol=1,label=T, combine = T)
dev.off()

tiff("pc100-res01_noLeg.tiff",width = 800,height = 800)
DimPlot(immune.combined, group.by = c("integrated_snn_res.0.1"),ncol=1,label=T, combine = T)+NoLegend()
dev.off()

#### Annotate Group with cluster markers ## 
wt<-immune.combined
head(wt[[]])
Idents(wt)<-"integrated_snn_res.0.1"
table(Idents(wt))
C0<-WhichCells(object = wt,  ident = c(8,5,0,19,20,18,9,15,4))
Idents(object = wt,cells= C0)<- "Glu_Neuron"

C1<-WhichCells(object = wt,  ident = c(2))
Idents(object = wt,cells =C1) <-"Astrocytes"

C4<-WhichCells(object = wt,  ident = c(7,11,6,12))
Idents(object = wt,cells = C4)<- 'GABA_Neuron'

C6<-WhichCells(object = wt,  ident = c(1))
Idents(object = wt,cells = C6)<-'Olig'

C8<-WhichCells(object = wt,  ident = c(3,16))
Idents(object = wt,cells= C8) <-'OPC'

C17<-WhichCells(object = wt,  ident = c(13))
Idents(object = wt,cells = C17)<- 'Ependymal'

C18<-WhichCells(object = wt,  ident = c(10))
Idents(object = wt,cells = C18)<- 'Microglial'

C19<-WhichCells(object = wt,  ident = c(14))
Idents(object = wt,cells = C19)<- 'Endothelial'

C20<-WhichCells(object = wt,  ident = c(17))
Idents(object = wt,cells = C20)<- 'Epithelial'

C21<-WhichCells(object = wt,  ident = c(21))
Idents(object = wt,cells = C21)<- 'Cajal-Retzius'

wt[["MajorCellTypes"]] <- Idents(object = wt)
table(Idents(wt))
immune.combined<-wt

tiff("cluster.tiff",width = 800, height = 800)
DimPlot(object = immune.combined, reduction= "umap", 
        group.by = "MajorCellTypes", label = F)
dev.off()
saveRDS(immune.combined, "All.integrated.annotated.rds")

#####################################
DefaultAssay(wt)<-"RNA"
Idents(wt)<-"MajorCellTypes"
age.markers<-FindAllMarkers(wt,
                            assay="RNA",
                            logfc.threshold = 0.25,
                            test.use="wilcox", 
                            slot = "data",
                            only.pos=T,
                            min.pct=0.1,
                            verbose = T,
                            return.thresh=0.05)
head(age.markers)
nrow(age.markers) 
write.csv(age.markers,"wholeSet_markers_MajorCellTypes_wilcox_RNAdata_cutoff025_010_005.csv")
###############

# getsub cluster for further analysis

wt<-pancreas.integrated
table(wt[["MajorCellTypes"]])

GABA <- subset(x = wt, subset = MajorCellTypes == "Microglial")
GABA <- droplevels(x = GABA)
table(Idents(GABA))
GABA
saveRDS(GABA,"all_MG.rds") # 

GABA <- subset(x = wt, subset = MajorCellTypes == "Astrocytes")
GABA <- droplevels(x = GABA)
table(Idents(GABA))
GABA
saveRDS(GABA,"all_AST.rds")# 

GABA <- subset(x = wt, subset = MajorCellTypes %in% c("OPC","Olig"))
GABA <- droplevels(x = GABA)
table(Idents(GABA))
GABA
saveRDS(GABA,"all_OPCOlig.rds") # 
#################################
